import os
from telegram import Update
from telegram.ext import (
    Application,
    MessageHandler,
    filters,
    ContextTypes
)
import json
import base64
from io import BytesIO
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

ADMIN_CHAT_ID = 1323961884  # –í–∞—à chat_id

async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user = update.effective_user
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç: {user.id if user else 'anonymous'}")
        
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp
        data = json.loads(update.message.web_app_data.data)
        image_base64 = data.get('image')
        sender_id = data.get('userId', 'anonymous')
        
        if not image_base64:
            await update.message.reply_text("‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            return
            
        try:
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            image_bytes = base64.b64decode(image_base64)
            img_file = BytesIO(image_bytes)
            img_file.name = f"graffiti_{sender_id}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.jpg"
            
            # –î–ª—è –¥–µ–±–∞–≥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            if os.getenv('DEBUG_MODE'):
                with open(img_file.name, 'wb') as f:
                    f.write(image_bytes)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            return
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        try:
            caption = (
                f"üñå –ù–æ–≤–æ–µ –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ (JPEG)\n"
                f"üë§ –û—Ç: {user.mention_markdown() if user else sender_id}\n"
                f"üìÖ {datetime.now().strftime('%d.%m.%Y %H:%M')}\n"
                f"#–≥—Ä–∞—Ñ—Ñ–∏—Ç–∏"
            )
            
            await context.bot.send_photo(
                chat_id=ADMIN_CHAT_ID,
                photo=img_file,
                caption=caption,
                parse_mode='Markdown'
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            reply_text = ("‚úÖ –í–∞—à–µ –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!" 
                         if str(user.id) != str(ADMIN_CHAT_ID) else
                         "‚úÖ –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ —Å–µ–±–µ (–∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)")
            
            await update.message.reply_text(reply_text)
            
            logger.info(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {ADMIN_CHAT_ID}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {str(e)}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            
    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞: {str(e)}", exc_info=True)
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    application = Application.builder() \
        .token("8185739343:AAH1jagUB9l0gnNW9Klyg4nRgsKZHHNCI8c") \
        .build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()
